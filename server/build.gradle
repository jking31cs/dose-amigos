//Build Script for Google App Engine
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.appengine:gradle-appengine-plugin:1.9.38'
    }
}


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'appengine'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()

}

//Dependencies for the project
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
    compile 'com.amazonaws:aws-lambda-java-events:1.1.0'
    compile 'mysql:mysql-connector-java:5.1.39'
    compile 'com.google.inject:guice:4.1.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.amazon.alexa:alexa-skills-kit:1.1.2'
    compile 'javax.servlet:servlet-api:2.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'com.google.oauth-client', name: 'google-oauth-client', version: '1.22.0'
    compile group: 'com.google.api-client', name: 'google-api-client', version: '1.22.0'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21'

    testCompile 'org.testng:testng:6.9.10'
    testCompile 'org.mockito:mockito-all:1.10.19'

    appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.40'
    compile 'com.google.appengine:appengine-api-1.0-sdk:1.9.40'

    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.21'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.6.1'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.6.3'
    compile 'org.glassfish.jersey.media:jersey-media-multipart:2.21'
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile 'org.glassfish.hk2:guice-bridge:2.3.0'

    compile 'com.google.inject.extensions:guice-servlet:4.1.0'
    compile 'com.google.inject.extensions:guice-persist:4.1.0'
}

test {
    useTestNG()
}

appengine {
    httpPort = 8085
    downloadSdk = true
    jvmFlags = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000']
    appcfg {
        oauth2 = true

        logs {
            severity = 1
            outputFile = file('mylogs.txt')
        }

        app {
            id = 'sample-app'
        }
    }
}

/**
 * Creates a zip file with all dependencies into build/dists directory.
 */
task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}
build.dependsOn buildZip
